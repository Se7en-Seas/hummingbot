# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import grpc.experimental

from hummingbot.connector.gateway.clob_spot.data_sources.penumbra.generated.penumbra.core.component.governance.v1 import (
    governance_pb2 as penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2,
)


class QueryServiceStub(object):
    """Query operations for the governance component.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProposalInfo = channel.unary_unary(
                '/penumbra.core.component.governance.v1.QueryService/ProposalInfo',
                request_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalInfoRequest.SerializeToString,
                response_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalInfoResponse.FromString,
                )
        self.ProposalList = channel.unary_stream(
                '/penumbra.core.component.governance.v1.QueryService/ProposalList',
                request_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalListRequest.SerializeToString,
                response_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalListResponse.FromString,
                )
        self.ProposalData = channel.unary_unary(
                '/penumbra.core.component.governance.v1.QueryService/ProposalData',
                request_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalDataRequest.SerializeToString,
                response_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalDataResponse.FromString,
                )
        self.NextProposalId = channel.unary_unary(
                '/penumbra.core.component.governance.v1.QueryService/NextProposalId',
                request_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.NextProposalIdRequest.SerializeToString,
                response_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.NextProposalIdResponse.FromString,
                )
        self.ValidatorVotes = channel.unary_stream(
                '/penumbra.core.component.governance.v1.QueryService/ValidatorVotes',
                request_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ValidatorVotesRequest.SerializeToString,
                response_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ValidatorVotesResponse.FromString,
                )
        self.VotingPowerAtProposalStart = channel.unary_unary(
                '/penumbra.core.component.governance.v1.QueryService/VotingPowerAtProposalStart',
                request_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.VotingPowerAtProposalStartRequest.SerializeToString,
                response_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.VotingPowerAtProposalStartResponse.FromString,
                )
        self.AllTalliedDelegatorVotesForProposal = channel.unary_stream(
                '/penumbra.core.component.governance.v1.QueryService/AllTalliedDelegatorVotesForProposal',
                request_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.AllTalliedDelegatorVotesForProposalRequest.SerializeToString,
                response_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.AllTalliedDelegatorVotesForProposalResponse.FromString,
                )
        self.ProposalRateData = channel.unary_stream(
                '/penumbra.core.component.governance.v1.QueryService/ProposalRateData',
                request_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalRateDataRequest.SerializeToString,
                response_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalRateDataResponse.FromString,
                )


class QueryServiceServicer(object):
    """Query operations for the governance component.
    """

    def ProposalInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProposalList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProposalData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NextProposalId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidatorVotes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VotingPowerAtProposalStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllTalliedDelegatorVotesForProposal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProposalRateData(self, request, context):
        """Used for computing voting power ?
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProposalInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ProposalInfo,
                    request_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalInfoRequest.FromString,
                    response_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalInfoResponse.SerializeToString,
            ),
            'ProposalList': grpc.unary_stream_rpc_method_handler(
                    servicer.ProposalList,
                    request_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalListRequest.FromString,
                    response_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalListResponse.SerializeToString,
            ),
            'ProposalData': grpc.unary_unary_rpc_method_handler(
                    servicer.ProposalData,
                    request_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalDataRequest.FromString,
                    response_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalDataResponse.SerializeToString,
            ),
            'NextProposalId': grpc.unary_unary_rpc_method_handler(
                    servicer.NextProposalId,
                    request_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.NextProposalIdRequest.FromString,
                    response_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.NextProposalIdResponse.SerializeToString,
            ),
            'ValidatorVotes': grpc.unary_stream_rpc_method_handler(
                    servicer.ValidatorVotes,
                    request_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ValidatorVotesRequest.FromString,
                    response_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ValidatorVotesResponse.SerializeToString,
            ),
            'VotingPowerAtProposalStart': grpc.unary_unary_rpc_method_handler(
                    servicer.VotingPowerAtProposalStart,
                    request_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.VotingPowerAtProposalStartRequest.FromString,
                    response_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.VotingPowerAtProposalStartResponse.SerializeToString,
            ),
            'AllTalliedDelegatorVotesForProposal': grpc.unary_stream_rpc_method_handler(
                    servicer.AllTalliedDelegatorVotesForProposal,
                    request_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.AllTalliedDelegatorVotesForProposalRequest.FromString,
                    response_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.AllTalliedDelegatorVotesForProposalResponse.SerializeToString,
            ),
            'ProposalRateData': grpc.unary_stream_rpc_method_handler(
                    servicer.ProposalRateData,
                    request_deserializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalRateDataRequest.FromString,
                    response_serializer=penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalRateDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'penumbra.core.component.governance.v1.QueryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryService(object):
    """Query operations for the governance component.
    """

    @staticmethod
    def ProposalInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.core.component.governance.v1.QueryService/ProposalInfo',
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalInfoRequest.SerializeToString,
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProposalList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.core.component.governance.v1.QueryService/ProposalList',
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalListRequest.SerializeToString,
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProposalData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.core.component.governance.v1.QueryService/ProposalData',
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalDataRequest.SerializeToString,
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NextProposalId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.core.component.governance.v1.QueryService/NextProposalId',
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.NextProposalIdRequest.SerializeToString,
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.NextProposalIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidatorVotes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.core.component.governance.v1.QueryService/ValidatorVotes',
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ValidatorVotesRequest.SerializeToString,
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ValidatorVotesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VotingPowerAtProposalStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.core.component.governance.v1.QueryService/VotingPowerAtProposalStart',
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.VotingPowerAtProposalStartRequest.SerializeToString,
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.VotingPowerAtProposalStartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AllTalliedDelegatorVotesForProposal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.core.component.governance.v1.QueryService/AllTalliedDelegatorVotesForProposal',
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.AllTalliedDelegatorVotesForProposalRequest.SerializeToString,
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.AllTalliedDelegatorVotesForProposalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProposalRateData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.core.component.governance.v1.QueryService/ProposalRateData',
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalRateDataRequest.SerializeToString,
            penumbra_dot_core_dot_component_dot_governance_dot_v1_dot_governance__pb2.ProposalRateDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
