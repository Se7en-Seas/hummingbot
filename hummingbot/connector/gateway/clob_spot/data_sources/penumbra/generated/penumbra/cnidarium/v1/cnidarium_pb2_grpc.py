# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import grpc.experimental

from hummingbot.connector.gateway.clob_spot.data_sources.penumbra.generated.penumbra.cnidarium.v1 import (
    cnidarium_pb2 as penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2,
)


class QueryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.KeyValue = channel.unary_unary(
                '/penumbra.cnidarium.v1.QueryService/KeyValue',
                request_serializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.KeyValueRequest.SerializeToString,
                response_deserializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.KeyValueResponse.FromString,
                )
        self.PrefixValue = channel.unary_stream(
                '/penumbra.cnidarium.v1.QueryService/PrefixValue',
                request_serializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.PrefixValueRequest.SerializeToString,
                response_deserializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.PrefixValueResponse.FromString,
                )
        self.Watch = channel.unary_stream(
                '/penumbra.cnidarium.v1.QueryService/Watch',
                request_serializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.WatchRequest.SerializeToString,
                response_deserializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.WatchResponse.FromString,
                )


class QueryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def KeyValue(self, request, context):
        """General-purpose key-value state query API, that can be used to query
        arbitrary keys in the JMT storage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrefixValue(self, request, context):
        """General-purpose prefixed key-value state query API, that can be used to query
        arbitrary prefixes in the JMT storage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Watch(self, request, context):
        """Subscribes to a stream of key-value updates, with regex filtering on keys.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'KeyValue': grpc.unary_unary_rpc_method_handler(
                    servicer.KeyValue,
                    request_deserializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.KeyValueRequest.FromString,
                    response_serializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.KeyValueResponse.SerializeToString,
            ),
            'PrefixValue': grpc.unary_stream_rpc_method_handler(
                    servicer.PrefixValue,
                    request_deserializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.PrefixValueRequest.FromString,
                    response_serializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.PrefixValueResponse.SerializeToString,
            ),
            'Watch': grpc.unary_stream_rpc_method_handler(
                    servicer.Watch,
                    request_deserializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.WatchRequest.FromString,
                    response_serializer=penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.WatchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'penumbra.cnidarium.v1.QueryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def KeyValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.cnidarium.v1.QueryService/KeyValue',
            penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.KeyValueRequest.SerializeToString,
            penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.KeyValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrefixValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.cnidarium.v1.QueryService/PrefixValue',
            penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.PrefixValueRequest.SerializeToString,
            penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.PrefixValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Watch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/penumbra.cnidarium.v1.QueryService/Watch',
            penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.WatchRequest.SerializeToString,
            penumbra_dot_cnidarium_dot_v1_dot_cnidarium__pb2.WatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
