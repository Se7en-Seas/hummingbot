# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import grpc.experimental

from hummingbot.connector.gateway.clob_spot.data_sources.penumbra.generated.penumbra.custody.v1 import (
    custody_pb2 as penumbra_dot_custody_dot_v1_dot_custody__pb2,
)


class CustodyServiceStub(object):
    """The custody protocol is used by a wallet client to request authorization for
    a transaction they've constructed.

    Modeling transaction authorization as an asynchronous RPC call encourages
    software to be written in a way that has a compatible data flow with a "soft
    HSM", threshold signing, a hardware wallet, etc.

    The custody protocol does not trust the client to authorize spends, so
    custody requests must contain sufficient information for the custodian to
    understand the transaction and determine whether or not it should be
    authorized.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authorize = channel.unary_unary(
                '/penumbra.custody.v1.CustodyService/Authorize',
                request_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeRequest.SerializeToString,
                response_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeResponse.FromString,
                )
        self.AuthorizeValidatorDefinition = channel.unary_unary(
                '/penumbra.custody.v1.CustodyService/AuthorizeValidatorDefinition',
                request_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorDefinitionRequest.SerializeToString,
                response_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorDefinitionResponse.FromString,
                )
        self.AuthorizeValidatorVote = channel.unary_unary(
                '/penumbra.custody.v1.CustodyService/AuthorizeValidatorVote',
                request_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorVoteRequest.SerializeToString,
                response_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorVoteResponse.FromString,
                )
        self.ExportFullViewingKey = channel.unary_unary(
                '/penumbra.custody.v1.CustodyService/ExportFullViewingKey',
                request_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.ExportFullViewingKeyRequest.SerializeToString,
                response_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.ExportFullViewingKeyResponse.FromString,
                )
        self.ConfirmAddress = channel.unary_unary(
                '/penumbra.custody.v1.CustodyService/ConfirmAddress',
                request_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.ConfirmAddressRequest.SerializeToString,
                response_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.ConfirmAddressResponse.FromString,
                )


class CustodyServiceServicer(object):
    """The custody protocol is used by a wallet client to request authorization for
    a transaction they've constructed.

    Modeling transaction authorization as an asynchronous RPC call encourages
    software to be written in a way that has a compatible data flow with a "soft
    HSM", threshold signing, a hardware wallet, etc.

    The custody protocol does not trust the client to authorize spends, so
    custody requests must contain sufficient information for the custodian to
    understand the transaction and determine whether or not it should be
    authorized.
    """

    def Authorize(self, request, context):
        """Requests authorization of the transaction with the given description.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthorizeValidatorDefinition(self, request, context):
        """Requests authorization of the given validator definition update.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthorizeValidatorVote(self, request, context):
        """Requests authorization of the given validator vote.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportFullViewingKey(self, request, context):
        """Requests the full viewing key from the custodian.

        Custody backends should decide whether to honor this request, and how to
        control access to it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmAddress(self, request, context):
        """Displays an address to a user for confirmation.

        Custody backends with user interaction should present the address to the
        user and wait for explicit confirmation before returning.

        Non-interactive custody backends may return immediately.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustodyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authorize': grpc.unary_unary_rpc_method_handler(
                    servicer.Authorize,
                    request_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeRequest.FromString,
                    response_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeResponse.SerializeToString,
            ),
            'AuthorizeValidatorDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizeValidatorDefinition,
                    request_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorDefinitionRequest.FromString,
                    response_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorDefinitionResponse.SerializeToString,
            ),
            'AuthorizeValidatorVote': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizeValidatorVote,
                    request_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorVoteRequest.FromString,
                    response_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorVoteResponse.SerializeToString,
            ),
            'ExportFullViewingKey': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportFullViewingKey,
                    request_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.ExportFullViewingKeyRequest.FromString,
                    response_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.ExportFullViewingKeyResponse.SerializeToString,
            ),
            'ConfirmAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmAddress,
                    request_deserializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.ConfirmAddressRequest.FromString,
                    response_serializer=penumbra_dot_custody_dot_v1_dot_custody__pb2.ConfirmAddressResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'penumbra.custody.v1.CustodyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustodyService(object):
    """The custody protocol is used by a wallet client to request authorization for
    a transaction they've constructed.

    Modeling transaction authorization as an asynchronous RPC call encourages
    software to be written in a way that has a compatible data flow with a "soft
    HSM", threshold signing, a hardware wallet, etc.

    The custody protocol does not trust the client to authorize spends, so
    custody requests must contain sufficient information for the custodian to
    understand the transaction and determine whether or not it should be
    authorized.
    """

    @staticmethod
    def Authorize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.custody.v1.CustodyService/Authorize',
            penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeRequest.SerializeToString,
            penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthorizeValidatorDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.custody.v1.CustodyService/AuthorizeValidatorDefinition',
            penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorDefinitionRequest.SerializeToString,
            penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthorizeValidatorVote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.custody.v1.CustodyService/AuthorizeValidatorVote',
            penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorVoteRequest.SerializeToString,
            penumbra_dot_custody_dot_v1_dot_custody__pb2.AuthorizeValidatorVoteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportFullViewingKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.custody.v1.CustodyService/ExportFullViewingKey',
            penumbra_dot_custody_dot_v1_dot_custody__pb2.ExportFullViewingKeyRequest.SerializeToString,
            penumbra_dot_custody_dot_v1_dot_custody__pb2.ExportFullViewingKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfirmAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/penumbra.custody.v1.CustodyService/ConfirmAddress',
            penumbra_dot_custody_dot_v1_dot_custody__pb2.ConfirmAddressRequest.SerializeToString,
            penumbra_dot_custody_dot_v1_dot_custody__pb2.ConfirmAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
